### Starting build.
# Target: check.ml.depends, tags: { package(oUnit), package(str), extension:ml, file:check.ml, ocaml, ocamldep, quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -modules check.ml > check.ml.depends
# Target: automata.ml.depends, tags: { package(oUnit), package(str), extension:ml, file:automata.ml, ocaml, ocamldep, quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -modules automata.ml > automata.ml.depends # cached
# Target: ast.ml.depends, tags: { package(oUnit), package(str), extension:ml, file:ast.ml, ocaml, ocamldep, quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package str -o ast.cmo ast.ml # cached
# Target: automata.cmo, tags: { package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:automata.cmo, file:automata.ml, implem, ocaml, quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package str -o automata.cmo automata.ml # cached
# Target: automata_module.mli.depends, tags: { package(oUnit), package(str), extension:mli, file:automata_module.mli, ocaml, ocamldep, quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -modules automata_module.mli > automata_module.mli.depends # cached
# Target: automata_module.cmi, tags: { package(oUnit), package(str), byte, compile, extension:mli, file:automata_module.mli, interf, ocaml, quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package str -o automata_module.cmi automata_module.mli # cached
# Target: two_list_queue.mli.depends, tags: { package(oUnit), package(str), extension:mli, file:two_list_queue.mli, ocaml, ocamldep, quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -modules two_list_queue.mli > two_list_queue.mli.depends # cached
# Target: two_list_queue.cmi, tags: { package(oUnit), package(str), byte, compile, extension:mli, file:two_list_queue.mli, interf, ocaml, quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package str -o two_list_queue.cmi two_list_queue.mli # cached
# Target: check.cmo, tags: { package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:check.cmo, file:check.ml, implem, ocaml, quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package str -o check.cmo check.ml
# Target: automata_module.ml.depends, tags: { package(oUnit), package(str), extension:ml, file:automata_module.ml, ocaml, ocamldep, quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -modules automata_module.ml > automata_module.ml.depends # cached
# Target: automata_module.cmo, tags: { package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:automata_module.cmo, file:automata_module.ml, implem, ocaml, quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package str -o automata_module.cmo automata_module.ml # cached
# Target: two_list_queue.ml.depends, tags: { package(oUnit), package(str), extension:ml, file:two_list_queue.ml, ocaml, ocamldep, quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -modules two_list_queue.ml > two_list_queue.ml.depends # cached
# Target: two_list_queue.cmo, tags: { package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:two_list_queue.cmo, file:two_list_queue.ml, implem, ocaml, quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package str -o two_list_queue.cmo two_list_queue.ml # cached
# Target: check.byte, tags: { package(oUnit), package(str), byte, dont_link_with, extension:byte, file:check.byte, link, ocaml, program, quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -linkpkg -thread -package oUnit -package str ast.cmo automata.cmo automata_module.cmo two_list_queue.cmo check.cmo -o check.byte
# Compilation successful.
